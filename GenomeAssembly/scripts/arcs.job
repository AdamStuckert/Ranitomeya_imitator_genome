#!/bin/bash
#SBATCH --partition=macmanes
#SBATCH --ntasks=40
#### #SBATCH --mem 700Gb
#SBATCH --open-mode=append
#SBATCH --exclude=node117,node118
#SBATCH -J arcs
#SBATCH --output arcs.log
#### #SBATCH --dependency=afterany:278428_79


#### USAGE:
## scaffold an assembly ($1) with 10x data, output to a new scaffolded assembly ($2)

source /mnt/lustre/macmaneslab/ams1236/.bash_profile


conda activate base
module load linuxbrew/colsa


# Local variables
INPUTFASTA=$1
OUTPUTFASTA=$2
READS="/mnt/lustre/macmaneslab/ams1236/imitator_genome/imitator10x/outs/barcoded.fastq.gz"
READNAME=$(echo $READS | sed "s/.fastq.gz//g")
ASSNAME=$(basename $INPUTFASTA)
DIR=$(pwd)
NOSUFFIXASS=$(echo $ASSNAME | sed "s/.fasta//g" | sed "s/.fa//g" )

# copy assembly into arcs folder
mkdir arcs_run
cp $DIR/$INPUTFASTA $DIR/arcs_run/$ASSNAME


/mnt/lustre/macmaneslab/ams1236/scripts/arcs.mk arcs draft=$DIR/arcs_run/$NOSUFFIXASS reads=$READNAME

# rename scaffolded assembly
NEWASS=$(ls -lhtr arcs_run/*fa | awk '{print $9}' | tail -n1)
cp $NEWASS $DIR/arcs_run/$OUTPUTFASTA

# Rename headers so they aren't too long for BUSCO, etc
awk -F',' '{print $1}' $OUTPUTFASTA > tmp.fa
mv tmp.fa $OUTPUTFASTA

# cleanup
rm arcs_run/$INPUTFASTA
rm arcs_run/${NOSUFFIXASS}.renamed*
rm arcs_run/${NOSUFFIXASS}.sorted.bam
